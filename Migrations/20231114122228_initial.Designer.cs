// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Data;

#nullable disable

namespace Pokemon.Migrations
{
    [DbContext(typeof(Datakontekst))]
    [Migration("20231114122228_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pokemon.Models.Eier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Etternavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.ToTable("Eiere");
                });

            modelBuilder.Entity("Pokemon.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorier");
                });

            modelBuilder.Entity("Pokemon.Models.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land");
                });

            modelBuilder.Entity("Pokemon.Models.PokemonEier", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("EierId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "EierId");

                    b.HasIndex("EierId");

                    b.ToTable("PokemonEiere");
                });

            modelBuilder.Entity("Pokemon.Models.PokemonKategori", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "KategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("PokemonKategorier");
                });

            modelBuilder.Entity("Pokemon.Models.Pokemons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Bursdag")
                        .HasColumnType("datetime2");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("Pokemon.Models.Eier", b =>
                {
                    b.HasOne("Pokemon.Models.Land", "Land")
                        .WithMany("Eiere")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Pokemon.Models.PokemonEier", b =>
                {
                    b.HasOne("Pokemon.Models.Eier", "Eier")
                        .WithMany("PokemonEier")
                        .HasForeignKey("EierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokemon.Models.Pokemons", "Pokemon")
                        .WithMany("PokemonEiere")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eier");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokemon.Models.PokemonKategori", b =>
                {
                    b.HasOne("Pokemon.Models.Kategori", "Kategori")
                        .WithMany("PokemonKategori")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokemon.Models.Pokemons", "Pokemon")
                        .WithMany("PokemonKategori")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokemon.Models.Eier", b =>
                {
                    b.Navigation("PokemonEier");
                });

            modelBuilder.Entity("Pokemon.Models.Kategori", b =>
                {
                    b.Navigation("PokemonKategori");
                });

            modelBuilder.Entity("Pokemon.Models.Land", b =>
                {
                    b.Navigation("Eiere");
                });

            modelBuilder.Entity("Pokemon.Models.Pokemons", b =>
                {
                    b.Navigation("PokemonEiere");

                    b.Navigation("PokemonKategori");
                });
#pragma warning restore 612, 618
        }
    }
}
